import { google } from 'googleapis';

export class GoogleSheetsService {
    constructor() {
        try {
            console.log('üîß Initializing Google Sheets...');
            
            // –î–ï–ë–ê–ì: –í—ã–≤–µ–¥–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            console.log('üìã Sheet ID from env:', process.env.GOOGLE_SHEET_ID);
            console.log('üìß Client Email:', process.env.GOOGLE_CLIENT_EMAIL);
            console.log('üÜî Project ID:', process.env.GOOGLE_PROJECT_ID);
            
            if (!process.env.GOOGLE_SHEET_ID) {
                throw new Error('GOOGLE_SHEET_ID is missing');
            }
            if (!process.env.GOOGLE_CLIENT_EMAIL) {
                throw new Error('GOOGLE_CLIENT_EMAIL is missing');
            }

            this.auth = new google.auth.GoogleAuth({
                credentials: {
                    type: 'service_account',
                    project_id: process.env.GOOGLE_PROJECT_ID,
                    private_key_id: process.env.GOOGLE_PRIVATE_KEY_ID,
                    private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
                    client_email: process.env.GOOGLE_CLIENT_EMAIL,
                    client_id: process.env.GOOGLE_CLIENT_ID,
                },
                scopes: ['https://www.googleapis.com/auth/spreadsheets']
            });

            this.sheets = google.sheets({ version: 'v4', auth: this.auth });
            this.spreadsheetId = process.env.GOOGLE_SHEET_ID; // –¢–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç
            
            console.log('‚úÖ Google Sheets service initialized successfully');
            console.log('üìã Using Sheet ID:', this.spreadsheetId);
            
        } catch (error) {
            console.error('‚ùå Error initializing Google Sheets:', error.message);
            throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
        }
    }

    async addWord(userId, word, translation) {
        try {
            console.log(`üìù Adding word to sheet: "${word}" -> "${translation}"`);
            console.log(`üìã Sheet ID: ${this.spreadsheetId}`);
            
            const response = await this.sheets.spreadsheets.values.append({
                spreadsheetId: this.spreadsheetId,
                range: 'Words!A:D',
                valueInputOption: 'RAW',
                requestBody: {
                    values: [[
                        userId.toString(),
                        word,
                        translation,
                        new Date().toISOString()
                    ]]
                }
            });
            
            console.log('‚úÖ Word successfully added to Google Sheets');
            return true;
            
        } catch (error) {
            console.error('‚ùå Google Sheets Error:');
            console.error('   Message:', error.message);
            console.error('   Code:', error.code);
            if (error.response) {
                console.error('   Status:', error.response.status);
                console.error('   Data:', error.response.data);
            }
            return false;
        }
    }
}
