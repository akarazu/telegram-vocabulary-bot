// –í —Ñ—É–Ω–∫—Ü–∏–∏ saveWordWithMeanings —É–ª—É—á—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
async function saveWordWithMeanings(chatId, userState, selectedTranslations) {
    console.log(`üíæ Saving word with meanings:`, {
        word: userState.tempWord,
        selectedTranslations: selectedTranslations
    });
    
    let success = true;
    
    if (sheetsService.initialized) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã - —Ç–µ–ø–µ—Ä—å –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —Å–ª–æ–≤—É
        try {
            const existingWords = await sheetsService.getUserWords(chatId);
            const isDuplicate = existingWords.some(word => 
                word.english.toLowerCase() === userState.tempWord.toLowerCase()
            );
            
            if (isDuplicate) {
                await showMainMenu(chatId, 
                    `‚ùå –°–ª–æ–≤–æ "${userState.tempWord}" —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ!\n\n` +
                    '–ö–∞–∂–¥–æ–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.'
                );
                userStates.delete(chatId);
                return;
            }
        } catch (error) {
            console.error('‚ùå Error checking duplicates:', error);
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ —É–¥–∞–ª–∞—Å—å
        }
        
        // ‚úÖ –°–û–ó–î–ê–ï–ú –ú–ê–°–°–ò–í –ó–ù–ê–ß–ï–ù–ò–ô –î–õ–Ø JSON
        const meaningsData = [];
        
        selectedTranslations.forEach(translation => {
            // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ Cambridge Dictionary
            const cambridgeMeanings = userState.meanings.filter(
                meaning => meaning.translation === translation
            );
            
            // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            if (cambridgeMeanings.length === 0) {
                meaningsData.push({
                    translation: translation,
                    example: '', // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ
                    partOfSpeech: '',
                    definition: ''
                });
            } else {
                // –î–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–∑ Cambridge –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                cambridgeMeanings.forEach(meaning => {
                    meaningsData.push({
                        translation: translation,
                        example: meaning.examples && meaning.examples.length > 0 
                            ? meaning.examples[0].english 
                            : '',
                        partOfSpeech: meaning.partOfSpeech || '',
                        definition: meaning.englishDefinition || ''
                    });
                });
            }
        });
        
        console.log(`üìù Meanings data for JSON:`, meaningsData);
        
        // ‚úÖ –°–û–•–†–ê–ù–Ø–ï–ú –í –ù–û–í–û–ú –§–û–†–ú–ê–¢–ï
        success = await sheetsService.addWordWithMeanings(
            chatId, 
            userState.tempWord, 
            userState.tempTranscription,
            userState.tempAudioUrl,
            meaningsData  // –ü–µ—Ä–µ–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π
        );
    }
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStates.delete(chatId);
    
    if (success) {
        const transcriptionText = userState.tempTranscription ? ` [${userState.tempTranscription}]` : '';
        
        let successMessage = '‚úÖ –°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä—å!\n\n' +
            `üí¨ **${userState.tempWord}**${transcriptionText}\n\n` +
            '**–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:**\n';
        
        selectedTranslations.forEach((translation, index) => {
            successMessage += `\n${index + 1}. ${translation}`;
        });
        
        successMessage += '\n\nüìö –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏!';
        
        await showMainMenu(chatId, successMessage);
    } else {
        await showMainMenu(chatId, 
            '‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n\n–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
        );
    }
}
